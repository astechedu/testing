<<<<< APIs PHP  >>>>


--------------------------------------------------------
--------------------------------------------------------
Keys: APIs, API with Curl, Core PHP Testing Api Using PDO MySql,


--------------------------------------------------------
--------------------------------------------------------

//Freasers
//PHP With code: PHP Important projects Suggestion
https://www.interviewbit.com/blog/php-projects/


//PHP Rest Api's
https://code.tutsplus.com/how-to-build-a-simple-rest-api-in-php--cms-37000t


//Video: API with Curl
https://youtu.be/IPp9tTs9ctY?t=1151

--------------------------------------------------------
--------------------------------------------------------

--------------------------------------------------------
--------------------------------------------------------


cURL PHP :

//Create a database:

CREATE DATABASE phptest;


//Create a table:

CREATE TABLE IF NOT EXISTS `transactions` 
(
   `id` int(20) NOT NULL AUTO_INCREMENT,
   `order_id` int(50) NOT NULL,
   `amount` decimal(9,2) NOT NULL,
   `response_code` int(10) NOT NULL,
   `response_desc` varchar(50) NOT NULL,
   PRIMARY KEY (`id`),
   UNIQUE KEY `order_id` (`order_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ;




//Create a Database Connection:

<?php
// Enter your Host, username, password, database below.
$con = mysqli_connect("localhost","root","","phptest");
if (mysqli_connect_errno())
{
    echo "Failed to connect to MySQL: " . mysqli_connect_error();
    die();
}
?>


//Create a REST API File:

<?php
header("Content-Type:application/json");
if (isset($_GET['order_id']) && $_GET['order_id']!="") 
{
include('db.php');
$order_id = $_GET['order_id'];
$result = mysqli_query($con,
       "SELECT * FROM `transactions` WHERE order_id=$order_id");
if(mysqli_num_rows($result)>0)
       {
    $row = mysqli_fetch_array($result);
    $amount = $row['amount'];
           $response_code = $row['response_code'];
           $response_desc = $row['response_desc'];
    response($order_id, $amount, $response_code, $response_desc);
    mysqli_close($con);
}
       else
       {
     response(NULL, NULL, 200,"No Record Found");
}
}
else
{
response(NULL, NULL, 400,"Request is invalid");
}
function response($order_id,$amount,$response_code, $response_desc)
{
$response['order_id'] = $order_id;
$response['amount'] = $amount;
$response['response_code'] = $response_code;
       $response['response_desc'] = $response_desc;
$json_response = json_encode($response);
echo $json_response;
}
?>


//localhost/api.php?order_id=101

---------------------------------------------------------------------------------------


---> API with Curl <---

//Video: https://youtu.be/IPp9tTs9ctY?t=1344

<?php
$url="https://programingwithvishal.com/api/";
$ch=curl_init();
curl_setopt($ch,CURLOPT_URL, $url);
curl_setopt($ch,CURLOPT_RETURNTRANSFER, true);
$result=curl_exec($ch);
curl_close($ch);
$result=json_decode($result);  //json_decode($result,ture); in array form
//echo '<pre>';
//print_r($result);

if(isset($result['status'])){
   if($result['status']==true){
       if(isset($result['result']))
          if($result['result']==true){
            
            
        }else{
            echo $result['data];
        }
   }else{

   }
}else{
   echo "API not working";
}



?>


-----x------


--------------------------------------------------------



>>>> Core PHP Testing Api Using PDO MySql <<<<

db.php

<?php

$host = 'localhost';
$dbname = 'phpapi';
$username = 'root';
$password = '';

try {

 	$pdo = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);

 	$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

} catch (PDOException $e) {

 	die("Database connection failed: " . $e->getMessage());
}

?>



//index.php

<?php
header('Content-Type:application/json');

$method = $_SERVER['REQUEST_METHOD'];

include 'db.php';

switch ($method) {
  //Read Operation
  case 'GET':
    $sql = 'SELECT *FROM users';
    $stmt = $pdo->query($sql);
    $result = $stmt->fetchAll(PDO::FETCH_ASSOC);
    echo json_encode($result);
    break;

  //Create Operation
  case 'POST':
    $data = json_decode(file_get_contents('php://input'),true);
      $name = $data['name'];
      $age = $data['age'];
      $stmt = $pdo->prepare('INSERT INTO users(name,age) values(?,?)');
      $stmt->execute([$name,$age]);
      echo json_encode(['message'=>'User succesfully inserted']);
    break;

   //Update Operation
   case 'PUT':
    parse_str(file_get_contents('php://input'), $data);
    $id = $data['id'];
    $name = $data['name'];
    $age = $data['age'];

    $stmt = $pdo->prepare('UPDATE users set name=?, age=? where id=?');
    $stmt->execute([$name, $age, $id]);
    echo json_encode(['message' => 'User succesfully updated']);
   break;

   //Delete Operation
   case 'DELETE':
      //$data = json_decode(file_get_contents('php://input'), $data);
      //parse_str(file_get_contents('php://input'), $data);

      $id = $_GET['id'];
     
      //$id = $data['id'];
      $stmt = $pdo->prepare('DELETE FROM users where id=?');
      $delUser = $stmt->execute([$id]);    
      echo json_encode(['message'=>'User Deleted succesfully']);      
   break;

  default:
    echo json_encode(['error'=>'Method not allowed']);
    break;
}


?>

-----x-----

--------------------------------------------------------
