>>>> PHP Higher Order Function <<<<<<

--------------------------------------------------------------
--------------------------------------------------------------
Keys: 
--------------------------------------------------------------
--------------------------------------------------------------


Websites: 

//Higher Order Function Examples
https://www.sitepoint.com/functional-programming-in-php-higher-order-functions/

--------------------------------------------------------------
--------------------------------------------------------------




>>> Higher Order Function <<<<

        Higher Order Function accepts another function as argument and return a function.




1.

function callback() {    
    echo "Callback executed in Higher Order Function";  
}

function hof($callback) {                                 //Higher Order Function 
    
    $callback();
}

 echo hof('callback');


2. 


function callback() {    
    return 10;
}

function hof($callback) {                     //Higher Order Function 
    
    echo $callback();
}

 hof('callback');



3.

function callback() {    
    return 10;
}

function hof($callback) {                                        //Higher Order Function
    
    return $callback();
}

 echo hof('callback');




4. HOF    And Type Hinting


function result($sum) {    
    return $sum;
}

function add(int $num, string $result) {           //Higher Order Function 
    $sum = $num + 2;
    return $result($sum);
}


 echo add(10, 'result');




5. Higher Order Function Using Type Hinting (Like: int, string, int|string etc)


function callback(): string {    
    return "Done";  
}

function hof(int $num1, int $num2, string $callback): int|string {               //Higher Order Function 
    
    $sum = $num1 + $num2;
    return "Sum is {$sum} " .$callback();
}

 echo hof(5,1, 'callback');



6;

//Double the marks : Creating higher Order Function 

$marks = [10,52,30,84,95];
//$marks = [1,2,3,4,5];

function result(array $marks) {   
     

     for($i=0; $i < count($marks); $i++){

         $marks_product[] = $marks[$i] * 2;
     }

     return $marks_product;
}


function add(array $marks, $result) {            //Higher Order Function
 
   return $result($marks);

}
 
 $newMarks = add($marks, 'result');

 echo "<pre>"; print_r($newMarks);



7. 


//Find discount for each price;

$price = [12,10,100,2000];


function callbackfun(array $price): array {    

    for($i=0; $i < count($price); $i++){
       $discount[] = $price[$i] * 0.10;
    }
    return $discount;
}



function hof($callbackfun, array $price): array  {   
 
    return callbackfun($price);
}

$discount = hof('callbackfun', $price);

echo "<pre>"; print_r($discount);






---x---





1. 
// Simple user-defined function we'll pass to our higher-order function
function echoHelloWorld() {
  echo "Hello World!";
}

// Higher-order function that takes a function as an input and calls it
function higherOrderFunction(callable $func) {
  $func();
}

// Call our higher-order function and give it our echoHelloWorld() function. 
// Notice we pass just the name as a string and no parenthesis.
// This echos "Hello World!"
higherOrderFunction('echoHelloWorld'); 




---x----


2.


function callback(){
  $num = 410;
  return $num;
}

function higherOrderFun($fun){
  
  return $fun();
}

echo higherOrderFun('callback');





---x---


3. 

$arrayOfNums = [1,2,3,4,5];

// Example of creating a function and giving it to a higher-order function array_filter()
function isEven($num) {
  return ($num % 2) === 0;
}

// array_filter is a higher-order function
$evenNums = array_filter($arrayOfNums, 'isEven');

var_dump($evenNums); // Prints out array containing [2, 4]


----x----


4. 


function printCustomMessage($message) {
  echo "$message";
}

call_user_func('printCustomMessage', 'Called custom message through the use of call_user_func!');


---x---








