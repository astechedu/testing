>>> Vue js Options Api <<<<<


-------------------------------------------------------------------------------
Keys: 
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------

//Composition api Vs Options api

//https://vueschool.io/articles/vuejs-tutorials/options-api-vs-composition-api/?utm_source=GoogleAds&utm_medium=SEM&gclid=EAIaIQobChMI0cjR6cflgQMVZKNmAh3k6QxiEAAYAiAAEgLBSfD_BwE

-------------------------------------------------------------------------------

TypeScript with Options API:

    Typing Component Props
    Typing Component Emits
    Typing Computed Properties
    Typing Event Handlers
    Augmenting Global Properties
    Augmenting Custom Options

//https://vuejs.org/guide/typescript/options-api.html#typing-component-props



-------------------------------------------------------------------------------
-------------------------------------------------------------------------------


>>Options API:

Familiarity
Simplicity
Ecosystem




<script
export default {
  // Properties returned from data() become reactive state
  // and will be exposed on `this`.
  data() {
    return {
      count: 0
    }
  },


  // Methods are functions that mutate state and trigger updates.
  // They can be bound as event handlers in templates.
  methods: {
    increment() {
      this.count++
    }
  },


  // Lifecycle hooks are called at different stages
  // of a component's lifecycle.
  // This function will be called when the component is mounted.
  mounted() {
    console.log(`The initial count is ${this.count}.`)
  }
}
</script>


<template>
  <button @click="increment">Count is: {{ count }}</button>
</template>>




---------------------------------------------------------------------------------














