>>>> Oracle Loops <<<


-----------------------------------------------------------------------
-----------------------------------------------------------------------
Keys: 
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------

Loops: 
https://www.techonthenet.com/oracle/loops/index.php

-----------------------------------------------------------------------
-----------------------------------------------------------------------

 --- Loops ---

//Oracle / PLSQL: Loops and Conditional Statements


Loops

    LOOP Statement
    FOR LOOP
    CURSOR FOR LOOP
    WHILE LOOP
    REPEAT UNTIL LOOP
    EXIT Statement

Conditional Statements

    IF-THEN-ELSE Statement
    CASE Statement
    GOTO Statement

--------------------------------------------------------------------

1. 

Syntax:

The syntax for the LOOP statement in Oracle/PLSQL is:

LOOP
   {...statements...}
END LOOP;




//Example:

LOOP
   monthly_value := daily_value * 31;
   EXIT WHEN monthly_value > 4000;
END LOOP;


----------------------------------------------------------------------

2.

Oracle / PLSQL: CURSOR FOR Loop:



Description:

You would use a CURSOR FOR LOOP when you want to fetch and process every record in a cursor. The CURSOR FOR LOOP will terminate when all of the records in the cursor have been fetched.



Syntax:

FOR record_index in cursor_name
LOOP
   {...statements...}
END LOOP;





//Parameters or Arguments

record_index
    The index of the record.
cursor_name
    The name of the cursor that you wish to fetch records from.
statements
    The statements of code to execute each pass through the CURSOR FOR LOOP. 



//Example:

Here is an example of a function that uses a CURSOR FOR LOOP:

CREATE OR REPLACE Function TotalIncome
   ( name_in IN varchar2 )
   RETURN varchar2
IS
   total_val number(6);

   cursor c1 is
     SELECT monthly_income
     FROM employees
     WHERE name = name_in;

BEGIN

   total_val := 0;

   FOR employee_rec in c1
   LOOP
      total_val := total_val + employee_rec.monthly_income;
   END LOOP;

   RETURN total_val;

END;

----------------------------------------------------------------------

3.

Oracle / PLSQL: WHILE LOOP


Description:

In Oracle, you use a WHILE LOOP when you are not sure how many times you will execute the loop body and the loop body may not execute even once.


Syntax:

The syntax for the WHILE Loop in Oracle/PLSQL is:

WHILE condition
LOOP
   {...statements...}
END LOOP;



Parameters or Arguments:

condition
    The condition is tested each pass through the loop. If condition evaluates to TRUE, the loop body is executed. If condition evaluates to FALSE, the loop is terminated.
statements
    The statements of code to execute each pass through the loop. 


//Example:

Let's look at a WHILE LOOP example in Oracle:

WHILE monthly_value <= 4000
LOOP
   monthly_value := daily_value * 31;
END LOOP;

------------------------------------------------------------------------

4. 

Oracle / PLSQL: REPEAT UNTIL LOOP:


Description:

Oracle doesn't have a REPEAT UNTIL LOOP, but you can emulate one with a LOOP statement.


Syntax:

The syntax for emulating a REPEAT UNTIL LOOP in Oracle/PLSQL is:

LOOP

   {...statements...}

   EXIT [ WHEN boolean_condition ];

END LOOP;


Parameters or Arguments

statements
    The statements of code to execute each pass through the loop.
boolean_condition
    Optional. It is the condition to terminate the loop. 



//Example:

Let's look at an example of how to emulate a REPEAT UNTIL LOOP in Oracle/PLSQL:

LOOP
   monthly_value := daily_value * 31;
   EXIT WHEN monthly_value > 4000;
END LOOP;

---------------------------------------------------------------------------

5.

Oracle / PLSQL: Exit Statement:


Description:

In Oracle, the EXIT statement is most commonly used to terminate LOOP statements.

Syntax:

The syntax for the EXIT statement in Oracle/PLSQL is:

EXIT [WHEN boolean_condition];


Parameters or Arguments

boolean_condition
    Optional. It is the condition to terminate the LOOP. 



Example

Let's look at an EXIT Example in Oracle/PLSQL:

LOOP
   monthly_value := daily_value * 31;
   EXIT WHEN monthly_value > 4000;
END LOOP;


--------------------------------------------------------------------------------






-------------------------------------------------------------------------
















	