>>>> MongoDB Aggregate  <<<<<


--------------------------------------------------------------

--------------------------------------------------------------
--------------------------------------------------------------

Keys:   Aggregation - SUM, MAX, MIN, AVG 


      Create, Insert, Find, Drop, Update, limit(), 
      $set, $inc, $gte, $eq, $expr, $not, $in, $or, $and, $nin, $ne, $lte, $gte, 
      sort,      
       $addFields, $set, $project, $unset, $replaceRoot, $replaceWith, Projection, 



--------------------------------------------------------------------------
--------------------------------------------------------------------------

--------------------------------------------------------------------------


//Mongodb aggregation
https://www.artofcse.com/learning/mongodb-aggregations
	
---------------------------------------------------------------------------

$min, $max:

db.collection.find({ max: { $max: "$price" }, min: { $min: "$price" } });

Output: 
	{ max: 2000, min: 5000 }


db.collection.aggregate([ 
    { "$group": { 
        "_id": null,
        "max": { "$max": "$price" }, 
        "min": { "$min": "$price" } 
    }}
])





----- Mongodb queries -----


1. Joins: ($lookup): left outer join, right outer join, full join, inner join 

vdo: https://youtu.be/zzVa5cvQK6w?list=PLA3GkZPtsafZydhN4nP0h7hw7PQuLsBv1&t=483   

Ex:

db.cust.aggregate([{$lookup:{from:"orders",localField:"_id", foreignField:"customer_id",as:"orderDetail"}}]).pretty()
   


$inc, $min, $max, $mul, $unset, $rename, upsert,     $push,$pop,$addToSet       (Topics)
$project, $bucket, aggregate(), 
$lookup (like Left Outer Join in mysql)




//Update field but not add to the document

-- Decrease all age by -2
db.users.updateMany({},{$inc:{age-2}})

--Increase age of sita to 50 only if her age is lesser than it 
db.users.updateOne({name:"sita"},{$max:{age:50}})                 //Now updated age is 50        $max	

-- Decrease in above 
db.users.updateOne({name:"sita"},{$min:{age:23}})                 //Now updated age is 23           $min

-- Multipy by factor or 2
db.users.updateOne({name:"sita"},{$mul:{age:2}})                 //Now Multiply by 2                     $mul

-- Unset
db.users.updateOne({name:"sita"},{$unset:{age:200}})            //Remove age                                    $unset


-- Rename of field
db.users.updateOne({name:"sita"},{$rename:{age:"studentAge"}})  //Rename of field, rename age with studentAge   $rename



-- Rename of field
db.users.updateOne({},{$rename:{age:"studentAge"}})           //Rename of all fields, rename age with studentAge   $rename

--Insert document if condition not found (agar golu nahi milta hai toh)
db.users.updateOne({name:"golu"},{$set:{age:100}},{upsert:true})   // Agar golu nahi milta toh ye document insert kardo




-----------------------------------------------------------------------------------------------------------



// how to perform aggregations such as (SUM, MAX, MIN, AVG, PUSH, addToSet, FRIST, LAST) on MongoDB query.


SUM:

	db.employees.aggregate([ { $group: { _id: "$phone", total: { $sum: "$salary" } } } ])

MAX:

	db.employees.aggregate([ { $group: { _id: "$phone", total: { $max: "$salary" } } } ])

MIN:

	db.employees.aggregate([ { $group: { _id: "$phone", total: { $min: "$salary" } } } ])

AVG:

	db.employees.aggregate([ { $group: { _id: "$phone", total: { $avg: "$salary" } } } ])

PUSH:

	db.employees.aggregate([ { $group: { 

	_id: "$phone", total: { $push: "$salary" } } } ])

addToSet:

	db.employees.aggregate([ { $group: { _id: "$phone", total: { $addToSet: "$salary" } } } ])

First:

	db.employees.aggregate([ { $group: { _id: "$phone", total: { $first: "$salary" } } } ])

Last:

	db.employees.aggregate([ { $group: { _id: "$phone", total: { $last: "$salary" } } } ])

--------------------------------------------------------------------------------------------------

 

MongoDB Aggregation - SUM, MAX, MIN, AVG 

--------------------------------------------------------



db.users.insertMany([
  { _id:1, fname: 'ajay',lname: 'sisaudiya', age: 80, salary: 6000,city: 'noida', state: 'up' },
  { _id:2,fname: 'geeta', lname: 'negi', age: 7 },
  { _id:3,fname: 'aryan', lname: 'negi', age: 61 },
  { _id:4,fname: 'sohan', lname: 'zubin', age: 71 },
  { _id:5,fname: 'joni', lname: 'singh', age: 80 },
  { _id:6,fname: 'zubin', lname: 'kumari', age: 7 },
  { _id:7,fname: 'komal', lname: 'rawat', age: 80, city: 'dehradun' },
  { _id:8,fname: 'mohan', lname: 'gupta', age: '50', city: 'meerut' },
  { _id:9,fname: 'sss', lname: 'kumar', age: 61, city: 'delhi' },
  { _id:10,fname: 'ttt', lname: 'kumar', age: 61, city: 'delhi' },
  { _id:11,fname: 'sohan', lname: 'singh', age: 51, city: 'delhi' },
  { _id:12,fname: 'rohan', lname: 'singh', age: 52, city: 'delhi' },
  { _id:13,fname: 'vijay', lname: 'rawat', age: 80, city: 'dhampur' },
  { _id:14,fname: 'vijay2', lname: 'rawat2', age: 80, city: 'dhampur', salary: 4000, country: 'india', state: 'uk'}
])




















