>>>> JavaScript Store >>>>>


---------------------------------------------------------------------------
Keys: Store, Reducer, State 
      map,filter,reduce,
    
---------------------------------------------------------------------------
---------------------------------------------------------------------------


Website: 

//Reducer, store, state in vanilla js

https://monsterlessons-academy.com/posts/simple-redux-introduction-in-vanilla-javascript

-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------



>>>> Store, Reducer, Store in Vanilla Js <<<<



<!DOCTYPE html>
<html>
  <head>
    <title>This is the title of the webpage!</title>
  </head>
  <body>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/redux/4.0.5/redux.js"></script>
    <script src="main.js"></script>
  </body>
</html>



const store = Redux.createStore();

const reducer = (state = []) => {
  return state;
};

const store = Redux.createStore(reducer);

console.log(store.getState());

store.subscribe(() => {
  console.log('subscribe', store.getState());
});


store.dispatch({ type: "ADD_USER" });


const reducer = (state = [], action) => {
  console.log("reducer", state, action);
  return state;
};


const reducer = (state = [], action) => {
  console.log("reducer", state, action);
  if (action.type === "ADD_USER") {
    return ['foo'];
  }

  return state;
};



store.dispatch({ type: "ADD_USER", payload: "jack" });

const reducer = (state = [], action) => {
  console.log("reducer", state, action);
  if (action.type === "ADD_USER") {
    return [...state, action.payload];
  }

  return state;
};



---------------------------------------------------------------------------------------

//Let's add one more use to see that it is working.

store.dispatch({ type: "ADD_USER", payload: "jack" });
store.dispatch({ type: "ADD_USER", payload: "john" });


<input type="text" class="userInput" />
<button class="addUser">Add user</button>
<ul class="list"></ul>


const list = document.querySelector(".list");
const addUserBtn = document.querySelector(".addUser");
const userInput = document.querySelector(".userInput");

addUserBtn.addEventListener("click", () => {
  store.dispatch({ type: "ADD_USER", payload: userInput.value });
});



store.subscribe(() => {
  list.innerHTML = "";
  userInput.value = "";
  store.getState().forEach((track) => {
    const li = document.createElement("li");
    li.textContent = track;
    list.appendChild(li);
  });
});




-------------------------------------------------------------------------------

-------------------------------------------------------------------------------

>>> map, filter, reduce <<<

1. arrau map method:
   //Return an array
   //Original array not changed

   const a = [1,2,3]
   a.map((value,index,array) => {
        console.log(value)      
      //console.log(value, index, array)
      //return value + 1
      //return value + index;
   })
     console.log(a)

2. Array filter method:
   //Return an arry
   //Original array not changed

   const a = [1,2,3,4,5]
         a.filter((a2) => {
         return a2<10
    })
    console.log(a)

3. reduce

//Array reduce method: Return a value
let arr3 = [1,2,3,5,2,1]
let newarr3 = arr3.reduce(() => {
   return h1 + h2
})

console.log(newarr3)


// Or

const reduce_func = (h1, h2) => {
  return h1 + h2
}

let newarr3 = arr3.reduce(reduce_func)
console.log(newarr3)

--------------------------------------------------------------




















